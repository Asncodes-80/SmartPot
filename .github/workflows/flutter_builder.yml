# This workflow is triggered on pushes to the repository.
name: Flutter Build CI
on:
  push:
    branches:
      - main
    
# on: push
jobs:
  build:
    name: Build Flutter app
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    env:
      appVersion: 0.0.0 
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      # Setup the flutter environment.
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # 'dev', 'alpha', 'beta', 'stable'
          flutter-version: '2.10.3'
      - run: |
          flutter clean
          flutter pub get
          flutter build apk --split-per-abi
          mv build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk \
          build/app/outputs/flutter-apk/com.SmartPotV${{env.appVersion}}.apk
      # Upload generated apk to the artifacts.
      - uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/com.SmartPotV${{env.appVersion}}.apk
  release:
    needs: build
    name: Release apk app
    runs-on: ubuntu-latest
    env:
      appVersion: 0.0.0 
    steps:
      - name: Release app to GitHub
        uses: 1fxe/GitHub-Release-Action@v1.0.2
        with:
          release_token: ${{ secrets.RELEASE_TOKEN }}
          release_tag: v${{ env.appVersion }}
          release_title: Release v${{ env.appVersion }}
          release_file: build/app/outputs/flutter-apk/com.SmartPotV${{env.appVersion}}.apk